@model UserAccount

@{
    // 確保 permissionsDictionary 不為 null
    var permissionsDictionary = ViewBag.PermissionsDictionary as Dictionary<int, string> ?? new Dictionary<int, string>();
}

<h1>編輯</h1>

<h4>會員帳號及權限</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UserId" />
            <div class="form-group">
                <label asp-for="Account" class="control-label">帳號</label>
                <input asp-for="Account" class="form-control" readonly="readonly" />
                <span asp-validation-for="Account" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Password" class="control-label">新密碼</label>
                <input id="Password" name="Password" type="password" class="form-control" placeholder="留空則不更改密碼" />
            </div>
            <div class="form-group">
                <label asp-for="Permissions" class="control-label">權限</label>
                <select asp-for="Permissions" class="form-control" asp-items="@(new SelectList(permissionsDictionary, "Key", "Value", Model.Permissions))"></select>
                <span asp-validation-for="Permissions" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Vip" /> @Html.DisplayNameFor(model => model.Vip)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="儲存" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">回到列表</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
